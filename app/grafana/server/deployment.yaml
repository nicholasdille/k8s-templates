#@ load("@ytt:data", "data")
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: grafana
  namespace: #@ data.values.grafana.namespace
spec:
  replicas: 1
  selector:
    matchLabels: #@ data.values.grafana.server.matchLabels
  template:
    metadata:
      labels: #@ data.values.grafana.server.matchLabels
    spec:
      restartPolicy: Always
      volumes:
      - name: config
        configMap:
          name: grafana-config
      - name: datasources
        configMap:
          name: grafana-datasources
      containers:
      - name: grafana
        image: grafana/grafana:latest
        imagePullPolicy: Always
        env:
        - name: GF_SERVER_ROOT_URL
          value: #@ "https://{}.{}".format(data.values.grafana.dns.name, data.values.domain)
        - name: GF_SECURITY_ADMIN_PASSWORD
          valueFrom:
            secretKeyRef:
              key: admin-pass
              name: grafana
        - name: GF_DATABASE_NAME
          valueFrom:
            secretKeyRef:
              key: database-name
              name: grafana
        - name: GF_DATABASE_TYPE
          value: mysql
        - name: GF_DATABASE_HOST
          value: db:3306
        - name: GF_DATABASE_USER
          valueFrom:
            secretKeyRef:
              key: database-user
              name: grafana
        - name: GF_DATABASE_PASSWORD
          valueFrom:
            secretKeyRef:
              key: database-pass
              name: grafana
        - name: TZ
          value: #@ data.values.timezone
        ports:
        - containerPort: 3000
          name: http
          protocol: TCP
        volumeMounts:
        - mountPath: /etc/grafana/
          name: config
        - mountPath: /etc/grafana/provisioning/datasources/
          name: datasources
