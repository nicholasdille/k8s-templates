#@ load("@ytt:data", "data")
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: gitaly
  namespace: #@ data.values.gitlab.namespace
data:
  #@yaml/text-templated-strings
  GITLAB_OMNIBUS_CONFIG: |
    # Avoid running unnecessary services on the gitaly server
    postgresql['enable'] = false
    redis['enable'] = false
    nginx['enable'] = false
    unicorn['enable'] = false
    sidekiq['enable'] = false
    gitlab_workhorse['enable'] = false

    # Prevent database connections during 'gitlab-ctl reconfigure'
    gitlab_rails['rake_cache_clear'] = false
    gitlab_rails['auto_migrate'] = false

    # Configure the gitlab-shell API callback URL. Without this, `git push` will
    # fail. This can be your 'front door' GitLab URL or an internal load
    # balancer.
    gitlab_rails['internal_api_url'] = 'http://server'

    # Fix for authentication against API
    gitlab_workhorse['auth_backend'] = 'http://server'

    # Make Gitaly accept connections on all network interfaces. You must use
    # firewalls to restrict access to this address/port.
    gitaly['listen_addr'] = '0.0.0.0:8075'
    gitaly['auth_token'] = '(@= data.values.gitlab.gitaly.token @)'

    gitaly['storage'] = [
      { 'name' => 'default', 'path' => '/var/opt/gitlab-data/git-data/repositories' },
    ]

    # prometheus
    prometheus['enable'] = false
    gitlab_monitor['listen_address'] = '0.0.0.0'
    gitlab_monitor['listen_port'] = '9168'
    gitaly['prometheus_listen_addr'] = "0.0.0.0:9236"
    node_exporter['listen_address'] = '0.0.0.0:9100'
    redis_exporter['listen_address'] = '0.0.0.0:9121'
    postgres_exporter['listen_address'] = '0.0.0.0:9187'
    gitlab_rails['monitoring_whitelist'] = ['127.0.0.0/8','10.42.0.0/16']
