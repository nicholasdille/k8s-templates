apiVersion: v1
kind: ConfigMap
metadata:
  name: mysql-grafana
  namespace: grafana
data:
  docker.cnf: |
    [mysqld]
    skip-host-cache
    skip-name-resolve
  mysql.cnf: |
    [mysqld]
    max_connections = 50
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mysql-grafana
  namespace: grafana
spec:
  replicas: 1
  selector:
    matchLabels:
      pod: mysql-grafana
  template:
    metadata:
      labels:
        pod: mysql-grafana
    spec:
      restartPolicy: Always
      containers:
      - name: mysql-grafana
        image: mysql
        imagePullPolicy: Always
        env:
        - name: MYSQL_RANDOM_ROOT_PASSWORD
          value: "true"
        - name: MYSQL_DATABASE
          valueFrom:
            secretKeyRef:
              key: database-name
              name: grafana
        - name: MYSQL_USER
          valueFrom:
            secretKeyRef:
              key: database-user
              name: grafana
        - name: MYSQL_PASSWORD
          valueFrom:
            secretKeyRef:
              key: database-pass
              name: grafana
        ports:
        - containerPort: 3306
          name: http
          protocol: TCP
        volumeMounts:
        - mountPath: /etc/mysql/conf.d/
          name: config
      volumes:
      - configMap:
          name: mysql-grafana
        name: config
---
kind: Service
apiVersion: v1
metadata:
  name: db
  namespace: grafana
spec:
  selector:
    pod: mysql-grafana
  ports:
  - name: mysql
    port: 3306
    targetPort: 3306
---
apiVersion: v1
kind: Namespace
metadata:
  name: grafana
  metadata:
    labels:
      name: grafana
---
apiVersion: v1
kind: Secret
metadata:
  name: grafana
  namespace: grafana
type: Opaque
stringData:
  admin-pass: test123
  database-name: grafana
  database-user: grafana
  database-pass: test123
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: grafana
  namespace: grafana
spec:
  replicas: 1
  selector:
    matchLabels:
      pod: grafana
  template:
    metadata:
      labels:
        pod: grafana
    spec:
      restartPolicy: Always
      containers:
      - name: grafana
        image: grafana/grafana:latest
        imagePullPolicy: Always
        env:
        - name: GF_SERVER_ROOT_URL
          value: https://grafana.example.com
        - name: GF_SECURITY_ADMIN_PASSWORD
          valueFrom:
            secretKeyRef:
              key: admin-pass
              name: grafana
        - name: GF_DATABASE_NAME
          valueFrom:
            secretKeyRef:
              key: database-name
              name: grafana
        - name: GF_DATABASE_TYPE
          value: mysql
        - name: GF_DATABASE_HOST
          value: db:3306
        - name: GF_DATABASE_USER
          valueFrom:
            secretKeyRef:
              key: database-user
              name: grafana
        - name: GF_DATABASE_PASSWORD
          valueFrom:
            secretKeyRef:
              key: database-pass
              name: grafana
        ports:
        - containerPort: 3000
          name: http
          protocol: TCP
---
kind: Service
apiVersion: v1
metadata:
  name: grafana
  namespace: grafana
  labels:
    pod: grafana
spec:
  selector:
    pod: grafana
  ports:
  - name: web
    port: 3000
    targetPort: 3000
---
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  name: grafana
  namespace: grafana
spec:
  jobLabel: app.kubernetes.io/name
  endpoints:
  - port: web
    honorLabels: true
  selector:
    matchLabels:
      pod: grafana
